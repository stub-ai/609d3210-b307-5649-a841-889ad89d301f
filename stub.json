{"config":{"system_prompt":"","model":"","temperature":0,"top_p":1,"framework":"nextjs-page-tailwind"},"prompts":[{"prompt":"Create a C++ project using Object-Oriented techniques for simulating the management of a casino. The casino is frequented by players who can play on various amusement machines. Each machine has states: OFF, ON, BROKEN. The program should simulate multiple players in the room with various machines in operation. Players should enter the room randomly at a given cadence. \n\nThe casino manager can press 'M' to access the menu and perform operations. Implement at least 4 types of gaming machines, and the casino can have more than one machine of the same type.\n\nInclude features such as opening and closing hours of the casino, alerts for the casino manager, positioning of each gaming machine, temperature sensors on machines, and failure probabilities. Any change in a machine's state should be communicated to the manager.\n\nGeneral functionalities include:\n- Casino constructor.\n- Loading casino configurations from an XML file.\n- Adding users/players and machines.\n- Listing the current state of the casino.\n- Turning off a machine by its ID.\n- Checking the state of a machine by its ID.\n- Calculating total memory used by the data structure.\n- Listing machines of a specific type.\n- Ranking machines based on failure rates and usage.\n- Ranking players based on time spent and prizes won in the casino.\n- Generating an XML report of the casino's state.\n- Increasing the probability of winning on machines surrounding a winning machine.\n- Listing all machines where the probability of winning is above a certain threshold.\n- Running the simulation with an optional debug mode.\n\nThe simulation should run continuously, and when the 'M' key is pressed, it should pause to display a menu for making changes.","md5":"d8b7adceb167ad3ec92f2f2a59f4f2fd"}]}